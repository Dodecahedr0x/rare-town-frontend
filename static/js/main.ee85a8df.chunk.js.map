{"version":3,"sources":["components/Navbar/DesktopSubNav.tsx","components/Navbar/items.ts","components/Navbar/DesktopNav.tsx","components/Navbar/MobileNav.tsx","components/WalletModal/WalletModal.tsx","utils/index.ts","contexts/Collection/Context.tsx","components/ConfirmationModal/index.tsx","constants/index.ts","contexts/Collection/Provider.tsx","hooks/useCollection.tsx","components/Navbar/WalletButton.tsx","components/Navbar/Navbar.tsx","views/Home/Home.tsx","components/TokenCard/index.tsx","views/MySteads/MySteads.tsx","views/Leaderboard/Leaderboard.tsx","hooks/usePaginatedCollection.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DesktopSubNav","label","href","subLabel","newTab","role","display","p","rounded","_hover","bg","useColorModeValue","target","undefined","direction","align","transition","_groupHover","color","fontWeight","fontSize","transform","opacity","justify","flex","w","h","as","ChevronRightIcon","NAV_ITEMS","children","DesktopNav","linkColor","linkHoverColor","popoverContentBgColor","spacing","map","navItem","trigger","placement","textDecoration","border","boxShadow","minW","child","MobileNavItem","useDisclosure","isOpen","onToggle","onClick","py","Link","ChevronDownIcon","in","animateOpacity","style","marginTop","mt","pl","borderLeft","borderStyle","borderColor","MobileNav","md","WalletModal","onClose","wallet","useWallet","handleChooseWallet","useCallback","walletName","select","adapter","connect","my","wallets","width","leftIcon","src","icon","alt","name","findTokenAddress","walletAddress","tokenMintAddress","a","anchor","PublicKey","findProgramAddress","toBuffer","TOKEN_PROGRAM_ID","findAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","findDataByOwner","connection","owner","programs","TokenAccount","getTokenAccountsByOwner","accounts","metadataPdaLookups","filter","e","data","amount","eq","metadata","Metadata","getPDA","mint","Promise","all","metadataAddresses","Account","getInfos","tokenInfo","Array","from","values","m","MetadataData","deserialize","Context","createContext","isFetchingOwned","mints","refresh","createAssociatedAccount","createAccount","claimToken","spendTokens","fetchMint","ConfirmationModal","maxW","size","thickness","COLLECTION_CLAIM_DELAY","SOLSTEADS_COLLECTION","collectionIdl","address","programID","idl","CollectionProvider","toast","useToast","useConnection","confirming","onOpen","useState","ownedTokens","setOwnedTokens","setIsFetchingOwned","userAccount","setUserAccount","collection","setCollection","setMints","provider","useMemo","preflightCommitment","fetchCollection","program","account","fetch","fetchedCollection","zeroKey","item","equals","i","index","console","log","useEffect","fetchOwned","publicKey","owned","toString","length","sort","b","received","sub","toNumber","indexOf","allMetadata","rank","Number","imageUri","properties","files","uri","solsteadsUrl","external_url","includes","fetchMints","ranks","fill","_","newMints","push","fetchUserAccount","Token","getAssociatedTokenAddress","token","associatedAddress","getAccountInfo","collectionKey","sendTransaction","Transaction","add","createAssociatedTokenAccountInstruction","title","description","status","duration","isClosable","signTransaction","tokenAccountAddress","createInitAccountInstruction","rpc","claim","claimedToken","claimedTokenAccount","tokenAccount","mintAuthority","tokenAuthority","tokenProgram","systemProgram","SystemProgram","programId","spend","targetToken","spender","Object","keys","Provider","value","useBalances","useContext","CollectionContext","WalletButton","connected","disconnect","useCollection","variant","colorScheme","substr","Logo","createIcon","displayName","viewBox","path","d","WithSubnavigation","minH","base","px","borderBottom","ml","boxSize","Home","currentImage","setCurrentImage","interval","setInterval","randomIndex","Math","round","random","image","clearTimeout","textAlign","sm","lineHeight","to","TokenCard","setAmount","timeLeft","setTimeLeft","timeBeforeClaim","difference","Date","now","claimed","hours","floor","minutes","seconds","timer","setTimeout","augmentedToken","alignItems","justifyContent","borderWidth","shadow","maxH","gap","onChange","disabled","lt","isFullWidth","MySteads","allMints","margin","allAttributes","attributes","key","attribute","trait_type","count","getAllAttributes","Leaderboard","filters","setFilters","React","updateState","forceUpdate","currentPage","setCurrentPage","pageSize","setPageSize","filteredMints","filterKeys","keep","sortedMints","slice","isLastPage","nextPage","old","previousPage","usePaginatedCollection","handleSetFilter","attributeType","mb","rightIcon","isAttached","Box","rel","WalletProviders","network","WalletAdapterNetwork","Mainnet","getPhantomWallet","getSlopeWallet","getSolflareWallet","getTorusWallet","options","clientId","getLedgerWallet","getSolletWallet","getSolletExtensionWallet","onError","error","message","ConnectionProvider","endpoint","WalletProvider","Providers","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee85a8df.chunk.js","sourcesContent":["import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Flex,\n  Stack,\n  Link,\n  Text,\n  useColorModeValue,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { NavItem } from \"./types\";\n\nconst DesktopSubNav = ({ label, href, subLabel, newTab }: NavItem) => {\n  return (\n    <Link\n      href={href}\n      role={\"group\"}\n      display={\"block\"}\n      p={2}\n      rounded={\"md\"}\n      _hover={{ bg: useColorModeValue(\"pink.50\", \"gray.900\") }}\n      target={newTab ? \"_blank\" : undefined}\n    >\n      <Stack direction={\"row\"} align={\"center\"}>\n        <Box>\n          <Text\n            transition={\"all .3s ease\"}\n            _groupHover={{ color: \"pink.400\" }}\n            fontWeight={500}\n          >\n            {label}\n          </Text>\n          <Text fontSize={\"sm\"}>{subLabel}</Text>\n        </Box>\n        <Flex\n          transition={\"all .3s ease\"}\n          transform={\"translateX(-10px)\"}\n          opacity={0}\n          _groupHover={{ opacity: \"100%\", transform: \"translateX(0)\" }}\n          justify={\"flex-end\"}\n          align={\"center\"}\n          flex={1}\n        >\n          <Icon color={\"pink.400\"} w={5} h={5} as={ChevronRightIcon} />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nexport default DesktopSubNav;\n","import { NavItem } from \"./types\";\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Home\",\n    href: \"#/\"\n  },\n  {\n    label: \"Leaderboard\",\n    href: \"#/leaderboard\"\n  },\n  {\n    label: \"My Steads\",\n    href: \"#/mysteads\"\n  },\n  {\n    label: \"Resources\",\n    children: [\n      {\n        label: \"RareTown Programs On GitHub\",\n        subLabel: \"Solana program repo\",\n        href: \"https://github.com/Dodecahedr0x/rare-town-programs\",\n        newTab: true,\n      },\n      {\n        label: \"RareTown Front-End On GitHub\",\n        subLabel: \"Front-end repo\",\n        href: \"https://github.com/Dodecahedr0x/rare-town-frontend\",\n        newTab: true,\n      },\n      {\n        label: \"SolSteads\",\n        subLabel: \"SolSteads Official Website\",\n        href: \"https://solsteads.com/\",\n        newTab: true,\n      },\n      {\n        label: \"SolSteads Discord\",\n        subLabel: \"SolSteads official Discord server\",\n        href: \"https://discord.gg/tbZe5jyx\",\n        newTab: true,\n      },\n    ],\n  },\n];\n\nexport default NAV_ITEMS;\n","import { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport {\n  Box,\n  Stack,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  Link,\n} from \"@chakra-ui/react\";\nimport DesktopSubNav from \"./DesktopSubNav\";\nimport NAV_ITEMS from \"./items\";\n\nconst DesktopNav = () => {\n  const linkColor = useColorModeValue(\"gray.600\", \"gray.200\");\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n  const popoverContentBgColor = useColorModeValue(\"white\", \"gray.800\");\n\n  return (\n    <Stack direction={\"row\"} spacing={4}>\n      {NAV_ITEMS.map((navItem) => (\n        <Box key={navItem.label}>\n          <Popover trigger={\"hover\"} placement={\"bottom-start\"}>\n            <PopoverTrigger>\n              <Link\n                p={2}\n                href={navItem.href}\n                fontSize={\"sm\"}\n                fontWeight={500}\n                color={linkColor}\n                _hover={{\n                  textDecoration: \"none\",\n                  color: linkHoverColor,\n                }}\n                target={navItem.newTab ? \"_blank\" : undefined}\n              >\n                {navItem.label}\n              </Link>\n            </PopoverTrigger>\n\n            {navItem.children && (\n              <PopoverContent\n                border={0}\n                boxShadow={\"xl\"}\n                bg={popoverContentBgColor}\n                p={4}\n                rounded={\"xl\"}\n                minW={\"sm\"}\n              >\n                <Stack>\n                  {navItem.children.map((child) => (\n                    <DesktopSubNav key={child.label} {...child} />\n                  ))}\n                </Stack>\n              </PopoverContent>\n            )}\n          </Popover>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nexport default DesktopNav;\n","import { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport {\n  Collapse,\n  Flex,\n  Link,\n  Icon,\n  Stack,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport NAV_ITEMS from \"./items\";\nimport { NavItem } from \"./types\";\n\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? \"#\"}\n        justify={\"space-between\"}\n        align={\"center\"}\n        _hover={{\n          textDecoration: \"none\",\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={\"all .25s ease-in-out\"}\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n          align={\"start\"}\n        >\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      p={4}\n      display={{ md: \"none\" }}\n    >\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem key={navItem.label} {...navItem} />\n      ))}\n    </Stack>\n  );\n};\n\nexport default MobileNav;\n","import {\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Image,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletName } from \"@solana/wallet-adapter-wallets\";\nimport { useCallback } from \"react\";\n\ninterface WalletModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst WalletModal: React.FC<WalletModalProps> = ({ isOpen, onClose }) => {\n  const wallet = useWallet();\n\n  const handleChooseWallet = useCallback(\n    (walletName: WalletName) => {\n      wallet.select(walletName);\n      wallet.adapter?.connect()\n    },\n    [wallet]\n  );\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Connect a wallet</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <VStack spacing=\"8px\" my={2}>\n            {wallet.wallets.map((wallet) => (\n              <Button\n                key={wallet.name}\n                width=\"100%\"\n                py={2}\n                leftIcon={\n                  <Image src={wallet.icon} alt={wallet.name} width={8} />\n                }\n                onClick={() => handleChooseWallet(wallet.name)}\n              >\n                {wallet.name}\n              </Button>\n            ))}\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default WalletModal;\n","import { Account, AnyPublicKey, programs } from \"@metaplex/js\";\nimport * as anchor from \"@project-serum/anchor\";\nimport {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID\n} from \"@solana/spl-token\";\n\nimport allMetadata from \"../assets/all_metadata.json\";\n\nexport const getAllAttributes = () => {\n  const attributes: {[traitType: string]: {count: number, values: string[]}} = {};\n\n  for (const key of Object.keys(allMetadata)) {\n    const metadata: any = (allMetadata as any)[key];\n\n    for (const attribute of metadata.attributes) {\n      if (!attributes[attribute.trait_type]) {\n        attributes[attribute.trait_type] = { count: 0, values: [] };\n      }\n\n      attributes[attribute.trait_type].count += 1;\n      if (!attributes[attribute.trait_type].values.includes(attribute.value))\n        attributes[attribute.trait_type].values.push(attribute.value);\n    }\n  }\n  \n  return attributes\n};\n\nexport const shortAddress = (address: string | undefined): string => {\n  if (!address) return \"???\";\n  return address.substr(0, 4) + \"...\" + address.substr(address.length - 4, 4);\n};\n\nexport const findTokenAddress = async (\n  walletAddress: anchor.web3.PublicKey,\n  tokenMintAddress: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        walletAddress.toBuffer(),\n        TOKEN_PROGRAM_ID.toBuffer(),\n        tokenMintAddress.toBuffer(),\n      ],\n      TOKEN_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const findAssociatedTokenAddress = async (\n  walletAddress: anchor.web3.PublicKey,\n  tokenMintAddress: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        walletAddress.toBuffer(),\n        TOKEN_PROGRAM_ID.toBuffer(),\n        tokenMintAddress.toBuffer(),\n      ],\n      ASSOCIATED_TOKEN_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const findDataByOwner = async (\n  connection: anchor.web3.Connection,\n  owner: AnyPublicKey\n): Promise<programs.metadata.MetadataData[]> => {\n  const accounts = await programs.TokenAccount.getTokenAccountsByOwner(\n    connection,\n    owner\n  );\n\n  const metadataPdaLookups = accounts\n    .filter((e) => e.data.amount?.eq(new anchor.BN(1)))\n    .map((e) => programs.metadata.Metadata.getPDA(e.data.mint));\n\n  const metadataAddresses = await Promise.all(metadataPdaLookups);\n  const tokenInfo = await Account.getInfos(connection, metadataAddresses);\n  return Array.from(tokenInfo.values()).map((m) =>\n    programs.metadata.MetadataData.deserialize(m.data)\n  );\n};\n","import { createContext } from \"react\";\nimport { CollectionMint } from \".\";\n\nimport { ContextValues } from \"./types\";\n\nconst Context = createContext<ContextValues>({\n    isFetchingOwned: false,\n    mints: [],\n    refresh: () => new Promise(() => {}),\n    createAssociatedAccount: () => new Promise(() => {}),\n    createAccount: () => new Promise(() => {}),\n    claimToken: () => new Promise(() => {}),\n    spendTokens: () => new Promise(() => {}),\n    fetchMint: (mint: CollectionMint) => mint\n});\n\nexport default Context;\n","import {\n  VStack,\n  Image,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\n\ninterface ConfirmationModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  isOpen,\n  onClose\n}) => {\n  const wallet = useWallet();\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent maxW=\"350px\">\n        <ModalHeader>Confirming transaction...</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <VStack spacing=\"8px\" my={2}>\n            <Image src={wallet.wallet?.icon} w=\"100%\" h=\"100%\" />\n            <Spinner size=\"xl\" thickness={\"8px\"} />\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ConfirmationModal;\n","import * as anchor from \"@project-serum/anchor\";\n\nimport collectionIdl from \"./idls/collection.json\"\n\nexport const COLLECTION_CLAIM_DELAY = new anchor.BN(86400)\n\nexport const WRAPPED_SOL_MINT = new anchor.web3.PublicKey(\n  \"So11111111111111111111111111111111111111112\"\n);\nexport const SOLSTEADS_COLLECTION = new anchor.web3.PublicKey(\n  \"8Adt6ry4BPgK2c8WkVtcdZemwtABZNPThaLZ97wcYnwf\"\n);\nexport const COLLECTION_ADDRESS = new anchor.web3.PublicKey(\n  collectionIdl.metadata.address\n);\n","import React, { useCallback, useEffect, useState, useMemo } from \"react\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { PublicKey, SystemProgram } from \"@solana/web3.js\";\nimport {\n  AccountInfo as TokenAccount,\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { Collection, CollectionItem, CollectionMint } from \".\";\nimport idl from \"../../constants/idls/collection.json\";\n\nimport Context from \"./Context\";\nimport ConfirmationModal from \"components/ConfirmationModal\";\nimport { useDisclosure, useToast } from \"@chakra-ui/react\";\nimport { SOLSTEADS_COLLECTION } from \"../../constants\";\nimport {\n  findAssociatedTokenAddress,\n  findDataByOwner,\n  findTokenAddress,\n} from \"utils\";\n\nimport allMetadata from \"../../constants/all_metadata.json\";\n\nconst programID = new PublicKey(idl.metadata.address);\n\nconst CollectionProvider: React.FC = ({ children }) => {\n  const toast = useToast();\n  const { connection } = useConnection();\n  const wallet = useWallet();\n\n  const { isOpen: confirming, onOpen, onClose } = useDisclosure();\n  const [ownedTokens, setOwnedTokens] = useState<string[]>([]);\n  const [isFetchingOwned, setIsFetchingOwned] = useState<boolean>(false);\n  const [userAccount, setUserAccount] = useState<TokenAccount>();\n  const [collection, setCollection] = useState<Collection>();\n  const [mints, setMints] = useState<CollectionMint[]>([]);\n\n  const provider = useMemo(\n    () =>\n      new anchor.Provider(connection, wallet as any, {\n        preflightCommitment: \"processed\",\n      }),\n    [connection, wallet]\n  );\n\n  /**\n   * Fetches the collection object from the program\n   */\n  const fetchCollection = useCallback(async () => {\n    if (!wallet) return;\n\n    const program = new anchor.Program(idl as anchor.Idl, programID, provider);\n\n    try {\n      const fetchedCollection: Collection =\n        (await program.account.collection.fetch(SOLSTEADS_COLLECTION)) as any;\n      const zeroKey = new anchor.web3.PublicKey(0);\n      fetchedCollection.mints = fetchedCollection.mints\n        .filter((item: CollectionItem) => !item.mint.equals(zeroKey))\n        .map((e, i) => ({ ...e, index: new anchor.BN(i) }));\n      setCollection(fetchedCollection);\n    } catch (err) {\n      console.log(\"Failed fetching collection\");\n    }\n  }, [wallet, provider]);\n\n  useEffect(() => {\n    fetchCollection();\n  }, [fetchCollection]);\n\n  /**\n   * Fetches the tokens owned by the user\n   */\n  const fetchOwned = useCallback(async () => {\n    if (!wallet.publicKey) return;\n\n    setIsFetchingOwned(true);\n\n    try {\n      const owned = await findDataByOwner(connection, wallet.publicKey);\n      setOwnedTokens(owned.map((e) => e.mint.toString()));\n    } catch (err) {\n      console.log(\"Failed fetching owned tokens\", err);\n    }\n\n    setIsFetchingOwned(false);\n  }, [wallet.publicKey, connection]);\n\n  useEffect(() => {\n    if (ownedTokens.length === 0) fetchOwned();\n  }, [fetchOwned, ownedTokens]);\n\n  /**\n   * Updates data for a specific token\n   */\n  const fetchMint = useCallback(\n    (mint: CollectionMint) => {\n      if (!collection || !connection) return mint;\n\n      const i = collection.mints\n        .sort((a, b) => b.received.sub(a.received).toNumber())\n        .map((e) => e.mint.toString())\n        .indexOf(mint.mint.mint.toString());\n\n      const metadata = (allMetadata as { [key: string]: any })[\n        mint.mint.mint.toString()\n      ];\n\n      return {\n        mint: mint.mint,\n        rank: Number(i),\n        imageUri: metadata.properties.files[1].uri,\n        solsteadsUrl: metadata.external_url,\n        metadata: metadata,\n        owned: ownedTokens.includes(mint.mint.mint.toString()),\n      };\n    },\n    [connection, collection, ownedTokens]\n  );\n\n  const fetchMints = useCallback(() => {\n    if (!collection || !connection) return;\n\n    const ranks = new Array(collection.mints.length)\n      .fill(0)\n      .map((_, i) => i)\n      .sort((a, b) =>\n        collection.mints[b].received\n          .sub(collection.mints[a].received)\n          .toNumber()\n      );\n\n    const newMints: CollectionMint[] = [];\n    for (const i in ranks) {\n      newMints.push({\n        mint: collection.mints[ranks[i]],\n        rank: Number(i),\n        owned: ownedTokens.includes(collection.mints[ranks[i]].mint.toString()),\n      });\n    }\n\n    setMints(newMints);\n  }, [connection, collection, ownedTokens]);\n\n  useEffect(() => {\n    fetchMints();\n  }, [fetchMints]);\n\n  const fetchUserAccount = useCallback(async () => {\n    if (!collection || !connection || !wallet.publicKey) return;\n\n    try {\n      const associatedAddress = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        collection.token,\n        wallet.publicKey\n      );\n      const token = new Token(\n        connection,\n        collection.token,\n        TOKEN_PROGRAM_ID,\n        wallet as any\n      );\n      setUserAccount(await token.getAccountInfo(associatedAddress));\n    } catch (err) {\n      console.log(\"User has no account yet\");\n    }\n  }, [connection, collection, wallet]);\n\n  useEffect(() => {\n    fetchUserAccount();\n  }, [fetchUserAccount]);\n\n  const refresh = useCallback(async () => {\n    await fetchCollection()\n    await fetchOwned()\n  }, [fetchCollection, fetchOwned])\n\n  const createAssociatedAccount = useCallback(async () => {\n    if (!wallet.publicKey || !collection) return;\n\n    onOpen();\n\n    const collectionKey = new anchor.web3.PublicKey(collection.token);\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      collectionKey,\n      wallet.publicKey\n    );\n\n    try {\n      await wallet.sendTransaction(\n        new anchor.web3.Transaction().add(\n          Token.createAssociatedTokenAccountInstruction(\n            ASSOCIATED_TOKEN_PROGRAM_ID,\n            TOKEN_PROGRAM_ID,\n            collectionKey,\n            associatedAddress,\n            wallet.publicKey,\n            wallet.publicKey\n          )\n        ),\n        connection\n      );\n\n      toast({\n        title: \"Account created\",\n        description: `Successfully created the associated token account`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (err) {\n      console.log(err);\n      toast({\n        title: \"Account creation failed\",\n        description: `${err}`,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      onClose();\n    }\n  }, [collection, connection, toast, wallet, onClose, onOpen]);\n\n  const createAccount = useCallback(async () => {\n    if (!wallet.publicKey || !wallet.signTransaction || !collection) return;\n\n    onOpen();\n\n    const collectionKey = new anchor.web3.PublicKey(collection.token);\n    const tokenAccountAddress = await findTokenAddress(\n      wallet.publicKey,\n      collectionKey\n    );\n\n    try {\n      await wallet.sendTransaction(\n        new anchor.web3.Transaction().add(\n          Token.createInitAccountInstruction(\n            TOKEN_PROGRAM_ID,\n            collectionKey,\n            tokenAccountAddress,\n            wallet.publicKey\n          )\n        ),\n        connection\n      );\n      toast({\n        title: \"Account creation successful\",\n        description: `Successfully created an account`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (err) {\n      console.log(err);\n\n      toast({\n        title: \"Account creation failed\",\n        description: `Failed to created an account`,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      onClose();\n    }\n  }, [collection, connection, toast, wallet, onClose, onOpen]);\n\n  const claimToken = useCallback(\n    async (mint: CollectionMint) => {\n      if (!wallet || !collection || !userAccount || !wallet.publicKey) return;\n\n      onOpen();\n\n      const program = new anchor.Program(\n        idl as anchor.Idl,\n        programID,\n        provider\n      );\n      const associatedAddress = await findAssociatedTokenAddress(\n        wallet.publicKey,\n        mint.mint.mint\n      );\n\n      try {\n        await program.rpc.claim(mint.mint.index, {\n          accounts: {\n            collection: SOLSTEADS_COLLECTION,\n            claimedToken: mint.mint.mint,\n            claimedTokenAccount: associatedAddress,\n            owner: wallet.publicKey,\n            tokenAccount: userAccount.address,\n            mint: collection.token,\n            mintAuthority: collection.tokenAuthority,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            systemProgram: SystemProgram.programId,\n          },\n        });\n\n        toast({\n          title: \"Claim successful\",\n          description: `Successfully claimed $TOWN for \"${mint.metadata?.name}\"`,\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n\n        // Update balance\n        await fetchCollection();\n      } catch (err) {\n        console.log(\"Failed claiming tokens\", err);\n\n        toast({\n          title: \"Claiming failed\",\n          description: `${err}`,\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n\n      onClose();\n    },\n    [\n      collection,\n      provider,\n      toast,\n      userAccount,\n      wallet,\n      onClose,\n      onOpen,\n      fetchCollection,\n    ]\n  );\n\n  const spendTokens = useCallback(\n    async (mint: CollectionMint, amount: anchor.BN) => {\n      if (!wallet || !collection || !userAccount || !wallet.publicKey) return;\n\n      onOpen();\n\n      const program = new anchor.Program(\n        idl as anchor.Idl,\n        programID,\n        provider\n      );\n\n      try {\n        await program.rpc.spend(mint.mint.index, amount, {\n          accounts: {\n            collection: SOLSTEADS_COLLECTION,\n            targetToken: mint.mint.mint,\n            spender: wallet.publicKey,\n            tokenAccount: userAccount.address,\n            mint: collection.token,\n            mintAuthority: collection.tokenAuthority,\n            tokenProgram: TOKEN_PROGRAM_ID,\n          },\n        });\n\n        toast({\n          title: \"Spending successful\",\n          description: `Successfully gave ${\n            amount.toNumber() / 10 ** 9\n          } $TOWN for \"${mint.metadata?.name}\"`,\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n\n        // Update collection\n        await fetchCollection();\n      } catch (err: any) {\n        console.log(\"Failed claiming tokens\", err, Object.keys(err));\n\n        toast({\n          title: \"Spending failed\",\n          description: `${err}`,\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n\n      onClose();\n    },\n    [\n      provider,\n      collection,\n      toast,\n      userAccount,\n      wallet,\n      onClose,\n      onOpen,\n      fetchCollection,\n    ]\n  );\n\n  return (\n    <Context.Provider\n      value={{\n        isFetchingOwned,\n        collection,\n        mints,\n        userAccount,\n        refresh,\n        createAssociatedAccount,\n        createAccount,\n        claimToken,\n        spendTokens,\n        fetchMint,\n      }}\n    >\n      {children}\n      <ConfirmationModal isOpen={confirming} onClose={onClose} />\n    </Context.Provider>\n  );\n};\n\nexport default CollectionProvider;\n","import { useContext } from \"react\";\n\nimport { CollectionContext } from \"../contexts/Collection\";\n\nconst useBalances = () => {\n  return {\n    ...useContext(CollectionContext),\n  };\n};\n\nexport default useBalances;\n","import { Button, Tag, TagLabel } from \"@chakra-ui/react\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport WalletModal from \"../../components/WalletModal\";\nimport { useEffect } from \"react\";\nimport { shortAddress } from \"utils\";\n\nimport useCollection from \"../../hooks/useCollection\";\n\nconst WalletButton: React.FC = () => {\n  const { isOpen, onClose, onOpen } = useDisclosure();\n  const { connected, publicKey, disconnect } = useWallet();\n  const { userAccount } = useCollection();\n\n  useEffect(() => {\n    if (connected) {\n      onClose();\n    }\n  }, [connected, onClose]);\n\n  return (\n    <>\n      <WalletModal isOpen={isOpen} onClose={onClose} />\n      {connected ? (\n        <>\n          {userAccount && (\n            <Tag size=\"lg\" variant=\"subtle\" colorScheme=\"cyan\">\n              <TagLabel>\n                {userAccount.amount.toNumber() / 10 ** 9} $TOWN\n              </TagLabel>\n            </Tag>\n          )}\n          <Button onClick={disconnect}>\n            {shortAddress(publicKey?.toString())}\n          </Button>\n        </>\n      ) : (\n        <Button onClick={onOpen}>Connect</Button>\n      )}\n    </>\n  );\n};\n\nexport default WalletButton;\n","import {\n  Box,\n  Flex,\n  IconButton,\n  Stack,\n  Collapse,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon, createIcon } from \"@chakra-ui/icons\";\n\nimport DesktopNav from \"./DesktopNav\";\nimport MobileNav from \"./MobileNav\";\n\nimport WalletButton from \"./WalletButton\";\n\nconst Logo = createIcon({\n  displayName: \"Logo\",\n  viewBox: \"0 0 538.27 742.48\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M741.65,815.19H711.52v-206H704V549.3h10.3V529.38h-2.76L680.24,397.64V360.25l20-.87v4.4l32.15-1.41s-10.35-2.64-8-4.46c5.4-4.25,12-3.54,4.92-3.86-2-.09-11.41-.37-19-.59a6.4,6.4,0,0,0-1.89-2.89c-2.25-1.58-23.64-1-28.16-.91v-4h-1.77v52L647.21,529.38h-2.76V549.3h10.28v41.59h-6.9v18.34h-6.42V590.89h-7.25v18.34h-8.49V590.89H618.4v18.34h-1.23v-72h7.09V523.46h-1.9l-21.57-90.87v-25.8l13.79-.61v3l22.18-1s-7.14-1.81-5.55-3.08c3.73-2.92,8.28-2.44,3.4-2.66-1.39-.06-7.88-.25-13.1-.41a4.29,4.29,0,0,0-1.29-2c-1.57-1.09-16.3-.72-19.43-.63v-2.75h-1.23v35.86l-13.93,58.76-58.09-145-20.77,51.86L464.89,221.63V164.2l30.69-1.35v6.77l49.4-2.17s-15.91-4-12.35-6.85c8.29-6.52,18.43-5.44,7.57-5.92-3.09-.14-17.51-.57-29.14-.91a9.43,9.43,0,0,0-2.93-4.44c-3.45-2.42-36.17-1.61-43.24-1.41v-6.13h-2.72v79.84L419.6,401,397.68,346.3,346,475.44,335.8,432.59v-25.8l13.78-.61v3l22.18-1s-7.14-1.81-5.54-3.08c3.72-2.92,8.28-2.44,3.4-2.66-1.39-.06-7.88-.25-13.1-.41a4.21,4.21,0,0,0-1.29-2c-1.56-1.09-16.31-.72-19.43-.63v-2.75h-1.23v35.86L313,523.46H311.1V537.2h6.82v19.47h.29v52.56h-3.16V590.89H307.8v18.34h-6.41V590.89h-7.26v18.34h-8.5V549.3h10.29V529.38h-2.76L261.9,397.64V360.25l20-.87v4.4L314,362.37s-10.35-2.64-8-4.46c5.39-4.25,12-3.54,4.91-3.86-2-.09-11.4-.37-19-.59a6.23,6.23,0,0,0-1.88-2.89c-2.26-1.58-23.64-1-28.15-.91v-4h-1.78v52L228.87,529.38h-2.78V549.3h10.3v59.93h-10.3v206H203.38v69.08H741.65Z\"\n      transform=\"translate(-203.38 -141.79)\"\n    />\n  ),\n});\n\nexport default function WithSubnavigation() {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Box>\n      <Flex\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        color={useColorModeValue(\"gray.600\", \"white\")}\n        minH={\"60px\"}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={\"solid\"}\n        borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\n        align={\"center\"}\n      >\n        <Flex\n          flex={{ base: 1, md: \"auto\" }}\n          ml={{ base: -2 }}\n          display={{ base: \"flex\", md: \"none\" }}\n        >\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant={\"ghost\"}\n            aria-label={\"Toggle Navigation\"}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n          <Logo boxSize={8} color={useColorModeValue(\"gray.600\", \"white\")} />\n\n          <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\n            <DesktopNav />\n          </Flex>\n        </Flex>\n\n        <Stack\n          flex={{ base: 1, md: 0 }}\n          justify={\"flex-end\"}\n          direction={\"row\"}\n          spacing={6}\n        >\n          <WalletButton />\n        </Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Flex,\n  Heading,\n  Container,\n  Image,\n  Stack,\n  Text,\n  SkeletonCircle,\n} from \"@chakra-ui/react\";\n\nimport allMetadata from \"../../assets/all_metadata.json\";\nimport { Link } from \"react-router-dom\";\n\nconst Home: React.FC = () => {\n  const [currentImage, setCurrentImage] = useState<string>();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const keys = Object.keys(allMetadata);\n      const randomIndex = Math.round(Math.random() * keys.length);\n      const image = (allMetadata as any)[keys[randomIndex]].properties.files[1]\n        .uri;\n      setCurrentImage(image);\n    }, 500);\n    return () => clearTimeout(interval);\n  }, []);\n\n  return (\n    <Container maxW={\"5xl\"}>\n      <Stack\n        textAlign={\"center\"}\n        align={\"center\"}\n        spacing={{ base: 8, md: 10 }}\n        py={{ base: 20, md: 28 }}\n      >\n        <Heading\n          fontWeight={600}\n          fontSize={{ base: \"3xl\", sm: \"4xl\", md: \"6xl\" }}\n          lineHeight={\"110%\"}\n        >\n          A new way to explore{\" \"}\n          <Text as={\"span\"} color={\"blue.400\"}>\n            Solsteads\n          </Text>\n        </Heading>\n        <Text color={\"gray.500\"} maxW={\"3xl\"}>\n          Owners of Solsteads can claim a <b>$TOWN</b> token daily. This token\n          can then be spent on any stead to increase its visibility. Help your\n          favorite project's stead gain visibility, show some love to a neighbor\n          with a great gallery or just push your stead up the leaderboard!\n        </Text>\n        <Stack spacing={6} direction={\"row\"}>\n          <Button\n            as={Link}\n            to=\"leaderboard\"\n            rounded={\"full\"}\n            px={6}\n            colorScheme={\"blue\"}\n            bg={\"blue.400\"}\n            _hover={{ bg: \"blue.500\" }}\n          >\n            Get started\n          </Button>\n        </Stack>\n        <Flex w={\"full\"} justify=\"center\">\n          {currentImage ? (\n            <Image src={currentImage} maxW=\"300px\" rounded=\"full\" />\n          ) : (\n            <SkeletonCircle size=\"300px\" />\n          )}\n        </Flex>\n        <Flex direction=\"column\">\n          <Heading>How-to use:</Heading>\n          <Stack direction=\"column\" justify=\"start\" align=\"start\">\n            <Text>1. Connect your wallet holding the Solstead in the top right corner.</Text>\n            <Text>2. Go to the <b><Link to=\"mysteads\">My Steads</Link></b> tab.</Text>\n            <Text>3. Create a <b>$TOWN</b> token account by clicking the initialize button</Text>\n            <Text>4. Claim tokens for each of your steads. You can only do this once a day.</Text>\n            <Text>5. Spend your <b>$TOWN</b> tokens any way you'd like!</Text>\n          </Stack>\n        </Flex>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport {\n  Button,\n  Divider,\n  Flex,\n  Box,\n  Link,\n  Input,\n  VStack,\n  Image,\n  Text,\n  Spacer,\n} from \"@chakra-ui/react\";\nimport useCollection from \"hooks/useCollection\";\nimport { CollectionMint } from \"contexts/Collection\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { COLLECTION_CLAIM_DELAY } from \"../../constants\";\n\ninterface TokenCardProps {\n  token: CollectionMint;\n}\n\nconst TokenCard: React.FC<TokenCardProps> = ({ token }) => {\n  const wallet = useWallet();\n  const { userAccount, claimToken, spendTokens, createAssociatedAccount, fetchMint } =\n    useCollection();\n\n  const [amount, setAmount] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n\n  const timeBeforeClaim = useCallback(() => {\n    const difference =\n      86400 -\n      new anchor.BN(Date.now() / 1000).sub(token.mint.claimed).toNumber();\n    const hours = Math.floor((difference / (60 * 60)) % 24);\n    const minutes = Math.floor((difference / 60) % 60);\n    const seconds = Math.floor(difference % 60);\n\n    return `${hours < 10 ? \"0\" + hours : hours}:${\n      minutes < 10 ? \"0\" + minutes : minutes\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\n  }, [token]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(timeBeforeClaim());\n    }, 1000);\n    // Clear timeout if the component is unmounted\n    return () => clearTimeout(timer);\n  });\n\n  const augmentedToken = useMemo(() => fetchMint(token), [token, fetchMint]);\n\n  return (\n    <Flex\n      w=\"280px\"\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      borderWidth=\"2px\"\n      rounded=\"lg\"\n      shadow=\"lg\"\n    >\n      <Image\n        src={augmentedToken.imageUri}\n        rounded=\"lg\"\n        w=\"280px\"\n        maxH=\"400px\"\n      />\n      <Text fontSize=\"2xl\" fontWeight=\"bold\" w=\"280px\">\n        {augmentedToken.metadata?.name}\n      </Text>\n      <Divider />\n      <VStack spacing=\"8px\" w=\"100%\" p=\"15px\">\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\n          Rank {augmentedToken.rank + 1}\n        </Text>\n        <Flex direction=\"row\" w=\"100%\">\n          <Box>\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\n              Points\n            </Text>\n          </Box>\n          <Spacer />\n          <Box>\n            <Text fontSize=\"md\" fontWeight=\"bold\">\n              {augmentedToken.mint.received.toNumber() / 10 ** 9}\n            </Text>\n          </Box>\n        </Flex>\n        <Box>\n          <Link href={augmentedToken.solsteadsUrl} target=\"_blank\">\n            Check on Solsteads\n          </Link>\n        </Box>\n        {wallet.connected && (\n          <>\n            {userAccount ? (\n              <>\n                <Flex gap=\"2px\">\n                  <Input onChange={(e) => setAmount(Number(e.target.value))} />\n                  <Button\n                    ml=\"5px\"\n                    colorScheme=\"blue\"\n                    disabled={\n                      userAccount.amount.toNumber() / 10 ** 9 < amount ||\n                      amount === 0\n                    }\n                    onClick={() =>\n                      spendTokens(\n                        augmentedToken,\n                        new anchor.BN(amount * 10 ** 9)\n                      )\n                    }\n                  >\n                    Give\n                  </Button>\n                </Flex>\n                {augmentedToken.owned && (\n                  <>\n                    <Button\n                      colorScheme=\"green\"\n                      onClick={() => claimToken(augmentedToken)}\n                      disabled={new anchor.BN(Date.now() / 1000)\n                        .sub(augmentedToken.mint.claimed)\n                        .lt(COLLECTION_CLAIM_DELAY)}\n                      isFullWidth\n                    >\n                      {new anchor.BN(Date.now() / 1000)\n                        .sub(token.mint.claimed)\n                        .lt(COLLECTION_CLAIM_DELAY)\n                        ? `Claimable in ${timeLeft}`\n                        : \"Claim\"}\n                    </Button>\n                  </>\n                )}\n              </>\n            ) : (\n              <Flex>\n                <Button colorScheme=\"teal\" onClick={createAssociatedAccount} isFullWidth>\n                  Initialize\n                </Button>\n              </Flex>\n            )}\n          </>\n        )}\n      </VStack>\n    </Flex>\n  );\n};\n\nexport default TokenCard;\n","import React, { useMemo } from \"react\";\nimport {\n  Box,\n  Link,\n  Flex,\n  Spinner,\n  Text,\n  Wrap,\n} from \"@chakra-ui/react\";\n\nimport useCollection from \"../../hooks/useCollection\";\nimport TokenCard from \"../../components/TokenCard\";\n\nconst MySteads: React.FC = () => {\n  const { collection, mints: allMints, isFetchingOwned } = useCollection();\n\n  const mints = useMemo(() => {\n    return allMints.filter((e) => e.owned);\n  }, [allMints]);\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" align=\"center\" p=\"10px\">\n      {collection && !isFetchingOwned ? (\n        <Box justify=\"center\" align=\"center\" w=\"full\">\n          {mints.length === 0 ? (\n            <Box my=\"20px\">\n              <Text fontSize=\"4xl\">You don't own any Solstead...</Text>\n              <Link fontSize=\"2xl\" href=\"https://solsteads.com/marketplaces\" target=\"_blank\">Find one here</Link>\n            </Box>\n          ) : (\n            <Box>\n              <Wrap\n                align=\"center\"\n                justify=\"center\"\n                w=\"100%\"\n                direction=\"row\"\n                margin=\"auto\"\n              >\n                {mints.map((item, i) => (\n                  <TokenCard key={item.mint.mint.toString() + item.rank} token={item} />\n                ))}\n              </Wrap>\n            </Box>\n          )}\n        </Box>\n      ) : (\n        <Box justify=\"center\" align=\"center\" width=\"100%\" my=\"40px\">\n          <Text fontSize=\"xl\" align=\"center\">\n            <b>Loading your steads...</b>\n          </Text>\n          <Spinner size=\"xl\" thickness={\"8px\"} />\n        </Box>\n      )}\n    </Flex>\n  );\n};\n\nexport default MySteads;\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Flex,\n  Select,\n  Spinner,\n  Tag,\n  Text,\n  Wrap,\n} from \"@chakra-ui/react\";\nimport { RepeatIcon } from \"@chakra-ui/icons\";\n\nimport useCollection from \"../../hooks/useCollection\";\nimport TokenCard from \"../../components/TokenCard\";\nimport usePaginatedCollection, {\n  SteadFilter,\n} from \"hooks/usePaginatedCollection\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { getAllAttributes } from \"utils\";\n\nconst allAttributes = getAllAttributes();\n\nconst Leaderboard: React.FC = () => {\n  const [filters, setFilters] = useState<SteadFilter>({});\n  const [, updateState] = React.useState<Object>();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  const { collection, refresh } = useCollection();\n  const {\n    mints,\n    currentPage,\n    pageSize,\n    isLastPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  } = usePaginatedCollection(filters);\n\n  const handleSetFilter = useCallback(\n    (attributeType: string, value?: string) => {\n      setFilters((old) => {\n        // TODO: allow multiple filters\n        if (!value) delete old[attributeType];\n        else old[attributeType] = [value];\n        return old;\n      });\n      forceUpdate();\n    },\n    [forceUpdate]\n  );\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" align=\"center\" p=\"10px\">\n      <Wrap direction=\"row\" justify=\"center\" mb=\"10px\">\n        {Object.keys(allAttributes).map((attributeType) => (\n          <Box key={attributeType}>\n            <Text>{attributeType}</Text>\n            <Select\n              onChange={(e) => handleSetFilter(attributeType, e.target.value)}\n            >\n              <option value={undefined}></option>\n              {allAttributes[attributeType].values.map((attribute) => (\n                <option key={attribute} value={attribute}>\n                  {attribute}\n                </option>\n              ))}\n            </Select>\n          </Box>\n        ))}\n      </Wrap>\n      <Button\n        rightIcon={<RepeatIcon />}\n        colorScheme=\"teal\"\n        variant=\"outline\"\n        mb=\"2\"\n        onClick={refresh}\n      >\n        Refresh\n      </Button>\n      {collection ? (\n        <Box justify=\"center\" align=\"center\" w=\"full\">\n          <Wrap\n            align=\"center\"\n            justify=\"center\"\n            w=\"95%\"\n            direction=\"row\"\n            margin=\"auto\"\n          >\n            {mints.map((item, i) => (\n              <TokenCard\n                key={item.mint.mint.toString() + item.rank}\n                token={item}\n              />\n            ))}\n          </Wrap>\n          <ButtonGroup variant=\"outline\" isAttached spacing=\"6\" m=\"10px\">\n            <Button\n              w=\"100px\"\n              colorScheme=\"blue\"\n              onClick={previousPage}\n              disabled={currentPage === 0}\n              leftIcon={<ChevronLeftIcon />}\n            >\n              Previous\n            </Button>\n            <Button as={Box}>{currentPage + 1}</Button>\n            <Button\n              w=\"100px\"\n              colorScheme=\"blue\"\n              onClick={nextPage}\n              disabled={isLastPage}\n              rightIcon={<ChevronRightIcon />}\n            >\n              Next\n            </Button>\n          </ButtonGroup>\n          <Box w=\"100px\">\n            <Text>Page Size</Text>\n            <Select\n              onChange={(e) => setPageSize(Number(e.target.value))}\n              value={pageSize}\n            >\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n              <option value=\"100\">100</option>\n            </Select>\n          </Box>\n        </Box>\n      ) : (\n        <Box justify=\"center\" align=\"center\" width=\"100%\" my=\"40px\">\n          <Text fontSize=\"xl\" align=\"center\">\n            <b>Loading tokens...</b>\n          </Text>\n          <Spinner size=\"xl\" thickness={\"8px\"} />\n        </Box>\n      )}\n      <Tag my=\"10px\" color=\"teal\">\n        Made with ❤️ by{\" \"}\n        <a\n          href=\"https://twitter.com/Dodecahedr0x\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          @Dodecahedr0x\n        </a>\n        . Donate to UuGEwN9aeh676ufphbavfssWVxH7BJCqacq1RYhco8e\n      </Tag>\n    </Flex>\n  );\n};\n\nexport default Leaderboard;\n","import { CollectionMint } from \"contexts/Collection\";\nimport { useCallback, useMemo, useState } from \"react\";\n\nimport useCollection from \"./useCollection\";\nimport allMetadata from \"../assets/all_metadata.json\";\n\nexport type SteadFilter = { [traitType: string]: string[] };\n\nexport default function usePaginatedCollection(filters: SteadFilter = {}) {\n  const { mints: allMints } = useCollection();\n\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageSize, setPageSize] = useState(50);\n\n  const filteredMints = (() => {\n    let filterKeys = Object.keys(filters);\n\n    return allMints.filter((mint) => {\n      let keep = true;\n\n      for (const attribute of (allMetadata as any)[mint.mint.mint.toString()]\n        .attributes) {\n        if (\n          filterKeys.includes(attribute.trait_type) &&\n          !filters[attribute.trait_type].includes(attribute.value)\n        ) {\n          keep = false\n        }\n      }\n\n      return keep\n    });\n  })();\n\n  const sortedMints = useMemo(() => {\n    return filteredMints.sort(\n      (a, b) => b.mint.received.toNumber() - a.mint.received.toNumber()\n    );\n  }, [filteredMints]);\n\n  const mints: CollectionMint[] = useMemo(() => {\n    return sortedMints.slice(\n      pageSize * currentPage,\n      pageSize * (currentPage + 1)\n    );\n  }, [sortedMints, currentPage, pageSize]);\n\n  const isLastPage = useMemo(() => {\n    return pageSize * (currentPage + 1) > allMints.length;\n  }, [pageSize, currentPage, allMints]);\n\n  const nextPage = useCallback(() => {\n    if (!isLastPage) {\n      setCurrentPage((old) => old + 1);\n    }\n  }, [isLastPage]);\n\n  const previousPage = useCallback(() => {\n    if (currentPage !== 0) {\n      setCurrentPage((old) => old - 1);\n    }\n  }, [currentPage]);\n\n  return {\n    mints,\n    pageSize,\n    currentPage,\n    isLastPage,\n    setPageSize,\n    nextPage,\n    previousPage,\n  };\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Route, HashRouter as Router, Routes } from \"react-router-dom\";\nimport { ChakraProvider, useToast } from \"@chakra-ui/react\";\nimport { WalletAdapterNetwork, WalletError } from \"@solana/wallet-adapter-base\";\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport { WalletModalProvider } from \"@solana/wallet-adapter-react-ui\";\nimport {\n  getLedgerWallet,\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  getTorusWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./views/Home\";\nimport { CollectionProvider } from \"contexts/Collection\";\nimport MySteads from \"views/MySteads\";\nimport Leaderboard from \"views/Leaderboard\";\n\nconst WalletProviders: React.FC = ({ children }) => {\n  const network = WalletAdapterNetwork.Mainnet;\n  const endpoint =\n    \"https://connect.runnode.com/?apikey=\" +\n    process.env.REACT_APP_RUN_NODE_API_KEY;\n  const toast = useToast();\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSlopeWallet(),\n      getSolflareWallet(),\n      getTorusWallet({\n        options: { clientId: \"Get a client ID @ https://developer.tor.us\" },\n      }),\n      getLedgerWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    [network]\n  );\n\n  const onError = useCallback(\n    (error: WalletError) =>\n      toast({\n        title: \"Error\",\n        description: error.message\n          ? `${error.name}: ${error.message}`\n          : error.name,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      }),\n    [toast]\n  );\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} onError={onError}>\n        <WalletModalProvider>{children}</WalletModalProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <ChakraProvider>\n      <WalletProviders>\n        <CollectionProvider>{children}</CollectionProvider>\n      </WalletProviders>\n    </ChakraProvider>\n  );\n};\n\nfunction App() {\n  return (\n    <Providers>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/leaderboard\" element={<Leaderboard />} />\n          <Route path=\"/mysteads\" element={<MySteads />} />\n        </Routes>\n      </Router>\n    </Providers>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}